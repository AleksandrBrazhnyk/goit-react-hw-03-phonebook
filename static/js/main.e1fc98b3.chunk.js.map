{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","style","container","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","this","form","label","input","type","autoComplete","pattern","title","onChange","required","placeholder","btn","Component","Filter","ContactList","contacts","onDeleteContact","list","map","id","item","info","onClick","App","filter","addContact","contact","shortid","generate","find","toLowerCase","toast","trim","test","sort","a","b","error","deleteContact","contactId","changeFilter","getVisibleContacts","normalizedFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","nextContacts","setItem","stringify","visibleContacts","length","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1fc98b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};","import PropTypes from 'prop-types';\nimport style from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={style.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport style from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={style.form} onSubmit={this.handleSubmit}>\n        <label className={style.label}>\n          Name\n          <input\n            className={style.input}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов.\"\n            onChange={this.handleChange}\n            required\n            placeholder=\"Enter name (Ivanov Ivan)\"\n          />\n        </label>\n        <label className={style.label}>\n          Phone Number\n          <input\n            className={style.input}\n            type=\"tel\"\n            autoComplete=\"off\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            onChange={this.handleChange}\n            required\n            placeholder=\"Enter numbe (111-11-11)\"\n          />\n        </label>\n        <button className={style.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;","import PropTypes from 'prop-types';\nimport style from './Filter.module.css';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={style.label}>\n      Find contacts by name\n      <input\n        className={style.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;","import PropTypes from 'prop-types';\n// import { ReactComponent as DeleteIcon } from '../../img/delete.svg';\nimport style from './ContactList.module.css';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={style.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={style.item} key={id}>\n          <p className={style.info}>\n            {name}: {number}\n          </p>\n          <button\n            className={style.btn}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            {/* <DeleteIcon width=\"26\" height=\"26\" /> */}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;","import { Component } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      toast(`🤔 ${name} is already in contacts.`);\n    } else if (contacts.find(contact => contact.number === number)) {\n      toast(`🤔 ${number} is already in contacts.`);\n    } else if (name.trim() === '' || number.trim() === '') {\n      toast.info(\"😱 Enter the contact's name and number phone!\");\n    } else if (!/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number)) {\n      toast.error('💩 Enter the correct number phone!');\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts].sort((a, b) => {\n          if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n          if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n          return 0;\n        }),\n      }));\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        {contacts.length > 1 && (\n          <Filter value={filter} onChange={this.changeFilter} />\n        )}\n        {contacts.length > 0 ? (\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        ) : (\n          <p>Your phonebook is empty. Please add contact.</p>\n        )}\n        <ToastContainer autoClose={3700} />\n      </Container>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"btn\":\"ContactList_btn__1Xk4q\"};"],"sourceRoot":""}